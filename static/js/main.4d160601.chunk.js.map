{"version":3,"sources":["components/sidebar/sidebar/sidebar.module.css","logo.svg","components/content/content.module.css/content.module.css","REDUX/Auth_Reducer.js","REDUX/List_Reducer.js","REDUX/Redux_store.js","Utils/validator.js","Utils/formControl.js","components/authorize/authorize.js","components/sidebar/sidebar.js","components/content/todoListForm.js","components/content/todoTask.js","components/content/content.js","components/content/content_container.js","components/header/header.js","components/header/header_container.js","components/main/main.js","App.js","lang/en.js","lang/ru.js","lang/uk.js","serviceWorker.js","index.js","components/authorize/authorize/authorize.module.css","components/header/header.module.css/header.module.css","Utils/formControl.module.css","components/main/main/main.module.css"],"names":["module","exports","initialState","login","password","authReducer","state","action","type","myPostData","id","tweretrter","description","done","listReducer","console","log","newTask","name","newTasks","reducers","combineReducers","auth","post","form","formReducer","persistedState","serializedState","localStorage","getItem","JSON","parse","e","loadFromLocalStorage","store","createStore","applyMiddleware","thunkMiddleware","subscribe","stringify","setItem","saveToLocalStorage","getState","window","minLength","FormControl","input","meta","props","child","hasError","touched","error","className","s","form_control","children","Input","restProps","Textarea","required","value","maxLengthCreator","maxLength","length","maxLength20","minLength8","AuthorizeReduxForm","reduxForm","onSubmit","handleSubmit","content","component","a","registration__container__input","Field","validate","autocomplete","placeholder","registration__button__wrapper","registration__button","connect","dispatch","setUserData","registration__container","to","redirect","values","countOpenTack","sidebar__items","TodoListFormRedux","c","content__container","content__container__input","content__container__textarea","cols","rows","content__button","deletePostData","container__items","container__items_index","index","container__items_name","container__items_description","container__items_button","onClick","filter","elem","TodoList","hideBlock","decription","arr","splice","setState","getDataList","addpost","myPostElement","el","onLangChange","this","map","React","Component","TodoListContainer","setPostData","Header","getOutUser","OutUserData","deleteTask","setRedirect","renderRedirect","h","header","header_logo","header_authorize","header_authorize_button","HeaderContainer","logOutUser","Button","main","button","counterpart","registerTranslations","title","authorize","task","count","hello","setLocale","App","lang","target","onChange","basename","process","from","path","render","Suspense","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d160601.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar__items\":\"sidebar_sidebar__items__n0UWl\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__items\":\"content_container__items__1vgVe\",\"container__items__hide\":\"content_container__items__hide__2C824\",\"content__container\":\"content_content__container__2HfZP\",\"content__container__input\":\"content_content__container__input__3lGCq\",\"content__container__textarea\":\"content_content__container__textarea__26-s4\",\"content__button\":\"content_content__button__1p3wT\",\"container__items_index\":\"content_container__items_index__OFAlp\",\"container__items_name\":\"content_container__items_name__Wocn1\",\"container__items_description\":\"content_container__items_description__KfP9p\",\"container__items_button\":\"content_container__items_button__3mKKk\"};","const SET_USER_DATA = 'SET-USER-DATA';\r\nconst LOG_OUT_DATA = 'LOG-OUT-DATA'\r\nlet initialState = {\r\n  login: null,\r\n  password: null\r\n\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n    return {\r\n      login: action.login,\r\n      password: action.password\r\n    }\r\n    case LOG_OUT_DATA:\r\n    return {\r\n      login:action.login,\r\n      password: action.password\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n export let setUserData = (login, password) => {\r\n\r\n    return {\r\n      type: SET_USER_DATA,\r\n      login,\r\n      password\r\n\r\n  }\r\n}\r\nexport let logOutUser = (login, password) => {\r\n\r\n   return {\r\n     type: LOG_OUT_DATA,\r\n     login,\r\n     password\r\n\r\n }\r\n}\r\n\r\n  export default authReducer;\r\n","const ADD_POST_DATA = 'ADD-POST-DATA';\r\nconst CLEAR_STORAGE = 'CLEAR-STORAGE';\r\nconst DELETE_POST_DATA = 'DELETE-POST-DATA';\r\n/*{id: null, name: null, description: null, delete:false}*/\r\nlet initialState = {\r\n  myPostData: [{id:865, tweretrter:'sdasd', description:'df', done:true},]\r\n  };\r\nconst listReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case  ADD_POST_DATA:\r\n        console.log(action);\r\n        let newTask = {\r\n        name: action.name,\r\n        description: action.description\r\n      }\r\n      return {\r\n        myPostData: [...state.myPostData, newTask]\r\n      }\r\n    case CLEAR_STORAGE:\r\n          return {\r\n        myPostData:action.newTasks\r\n      }\r\n    case DELETE_POST_DATA:\r\n      return {\r\n        myPostData:action.newTask\r\n      }\r\n    default:\r\n     return state;\r\n  }\r\n}\r\n\r\nexport let setPostData = (name, description) => {\r\n  return {\r\n    type: ADD_POST_DATA,\r\n    name,\r\n    description\r\n  }\r\n}\r\nexport let deleteTask = (newTasks) => {\r\n  return {\r\n    type: CLEAR_STORAGE,\r\n    newTasks\r\n  }\r\n}\r\nexport let deletePostData = (newTask) => {\r\n  return {\r\n    type: DELETE_POST_DATA,\r\n    newTask\r\n  }\r\n}\r\n\r\nexport default listReducer;\r\n","import {createStore} from 'redux';\r\nimport {applyMiddleware} from 'redux';\r\nimport { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport authReducer from './Auth_Reducer.js';\r\nimport listReducer from './List_Reducer.js';\r\nimport thunkMiddleware from 'redux-thunk';\r\nlet reducers  = combineReducers({\r\n  auth: authReducer,\r\n  post: listReducer,\r\n  form:formReducer\r\n});\r\n\r\nconst saveToLocalStorage = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state)\r\n    localStorage.setItem('state', serializedState)\r\n  } catch(e) {\r\n    console.log(e);\r\n  }\r\n}\r\nconst loadFromLocalStorage = () => {\r\ntry {\r\n  const serializedState =  localStorage.getItem('state')\r\n  if (serializedState === null) return undefined\r\n  return JSON.parse(serializedState)\r\n} catch(e) {\r\n  console.log(e);\r\n  return undefined;\r\n}\r\n}\r\n const persistedState = loadFromLocalStorage();\r\nlet store = createStore(reducers,persistedState, applyMiddleware(thunkMiddleware));\r\nstore.subscribe(()=> saveToLocalStorage(store.getState()))\r\n\r\nwindow.store =store;\r\nexport default store;\r\n","export const required = (value) => {\r\n  if (value)  return undefined;\r\n  return 'Field is required';\r\n\r\n}\r\n\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength)  return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n\r\n}\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n  if (value.length < minLength) return `Min length is ${minLength} symbols`;\r\n  return undefined;\r\n}\r\n","import React from 'react';\r\nimport s from './formControl.module.css';\r\nimport { Field, reduxForm} from 'redux-form';\r\n\r\nconst FormControl = ({input, meta, child,...props}) => {\r\n   const hasError = meta.touched && meta.error;\r\n   return (\r\n     <div className={s.form_control+\" \"+ (hasError? s.error: \"\")}>\r\n      <div>\r\n        {props.children}\r\n      </div>\r\n      <div>\r\n      { hasError && <span className={s.error}>{meta.error}</span>}\r\n      </div>\r\n     </div>\r\n   )\r\n}\r\n\r\nexport const Input = (props) => {\r\n   const {input, meta, child,...restProps} = props;\r\n   return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}\r\nexport const Textarea = (props) => {\r\n   const {input, meta, child,...restProps} = props;\r\n   return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const createField = (name, placeholder, component, type) =>\r\n {\r\n  return (\r\n     <Field name={name}\r\n  placeholder={placeholder}\r\n  component={component}\r\n  type={type} />\r\n)\r\n}\r\n","import React from 'react';\r\nimport a from './authorize/authorize.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {connect} from   'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {setUserData} from   '../../REDUX/Auth_Reducer.js';\r\nimport listReducer from '../../REDUX/List_Reducer';\r\nimport {deleteTask} from '../../REDUX/List_Reducer';\r\nimport {Input} from '../../Utils/formControl.js';\r\nimport authReducer from   '../../REDUX/Auth_Reducer.js';\r\nimport counterpart from 'counterpart';\r\nimport Translate  from 'react-translate-component';\r\nimport {required , maxLengthCreator, minLengthCreator} from '../../Utils/validator.js'\r\n\r\nconst Authorize = (props) => {\r\n console.log(props);\r\n let redirect = () => {\r\n   if (props.login && props.password) {\r\n      return <Redirect to='/content' />\r\n   }\r\n }\r\n\r\n let pushFormData = (values) => {\r\n    props.setUserData(values.login, values.password);\r\n\r\n }\r\n   return (\r\n     <div className={a.registration__container}>\r\n     {redirect()}\r\n      <AuthorizeReduxForm   onSubmit={pushFormData}/>\r\n     </div>\r\n   )\r\n\r\n}\r\nconst maxLength20 = maxLengthCreator(20);\r\nconst minLength8 = minLengthCreator(8);\r\nconst AuthorizeForm = (props) => {\r\n\r\n  return (\r\n    <div>\r\n    <form  onSubmit = {props.handleSubmit}>\r\n      <Translate content='authorize.name' component='label'/>\r\n    <div className={a.registration__container__input}>\r\n    <Field component={Input}  validate={[required, maxLength20]}  name={'login'} autocomplete=\"off\" placeholder='Enter your mail' />\r\n   </div>\r\n   <label></label>\r\n   <div className={a.registration__container__input}>\r\n   <Field component={Input} name={'password'}    validate={[required, minLength8]} autocomplete=\"off\" placeholder='Enter your pass' type={'password'} />\r\n  </div>\r\n  <div>\r\n  {/*<Field component={'input'} name={'rememberMe'}  value ='false' type={'checkbox'} />*/}\r\n </div>\r\n <div className={a.registration__button__wrapper}>\r\n <button className={a.registration__button}></button>\r\n </div>\r\n    </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst  AuthorizeReduxForm = reduxForm({form:'authorize'})(AuthorizeForm);\r\nconst mapStateToProps = (state) =>  {\r\n  return {\r\n    login: state.auth.login,\r\n    password: state.auth.password,\r\n    myPostData: state.post.myPostData\r\n\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUserData:(login, password) => {\r\n      dispatch(setUserData(login, password))\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Authorize);\r\n","import React from 'react';\r\nimport s from './sidebar/sidebar.module.css';\r\nimport {setPostData} from '../../REDUX/List_Reducer';\r\nimport {connect} from   'react-redux';\r\nimport Translate  from 'react-translate-component';\r\n\r\nconst Sidebar = (props) => {\r\n  let countOpenTack = props.myPostData.length;\r\n\r\n  return (\r\n    <div className={s.sidebar__items}>\r\n     <Translate content='task.count' component='p'/><p>{countOpenTack}</p>\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\nconst mapStateToProps = (state) =>  {\r\n  return {\r\n  myPostData: state.post.myPostData\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TodoList from './content';\r\nimport c from './content.module.css/content.module.css';\r\nimport {required , maxLengthCreator} from '../../Utils/validator.js';\r\nimport {Input, Textarea} from '../../Utils/formControl.js';\r\nimport Translate  from 'react-translate-component';\r\nlet maxLength300 = maxLengthCreator(300);\r\nconst TodoListForm = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <div className={c.content__container}>\r\n    <form onSubmit = {props.handleSubmit}>\r\n    <Translate content='task.name' component='span'/>\r\n    <div className={c.content__container__input}>\r\n    <Field autocomplete=\"off\" validate={[required]} component={Input} name={'name'} />\r\n   </div>\r\n   <Translate content='task.description' component='span'/>\r\n   <div className={c.content__container__input}>\r\n   <Field  autocomplete=\"off\"   validate={[required]} className={c.content__container__textarea} component={Textarea} cols=\"45\" rows=\"5\" name={'description'} type={'text'} />\r\n  </div>\r\n <div>\r\n <button className={c.content__button} name='Create tack'></button>\r\n </div>\r\n    </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst TodoListFormRedux = reduxForm({\r\n  form: 'todoList'\r\n})(TodoListForm);\r\nexport default TodoListFormRedux;\r\n","import React from 'react';\r\nimport c from './content.module.css/content.module.css';\r\nimport {deletePostData} from '../../REDUX/List_Reducer';\r\nimport {connect} from   'react-redux';\r\nimport {setPostData} from '../../REDUX/List_Reducer';\r\nconst TodoTask = (props) => {\r\n console.log(props);\r\n /*let removeObj = () => {\r\n    console.log(props);\r\n   let a = false;\r\n}*/\r\n const handleClick = () => {\r\n   let newTask = props.myPostData.filter((elem, index) => {\r\n     return index !== props.id\r\n   });\r\n   props.deletePostData(newTask);\r\n  // props.history.push('/');\r\n }\r\n  return (\r\n      <div>\r\n      <div className={ c.container__items}>\r\n      <div className={c.container__items_index}>{props.index}</div>\r\n      <div className={c.container__items_name}>{props.name}</div>\r\n      <div className={c.container__items_description}>{props.description}</div>\r\n      <div className={c.container__items_button} >\r\n       <button onClick={handleClick} name='Create task' ></button>\r\n      </div>\r\n      </div>\r\n      </div>\r\n  )\r\n}\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n  myPostData: state.post.myPostData\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deletePostData: (newTasks) => {\r\n      dispatch(deletePostData(newTasks))\r\n    },\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoTask);\r\n","import React, {useState }from 'react';\r\nimport c from './content.module.css/content.module.css';\r\nimport TodoListFormRedux from './todoListForm.js';\r\nimport {setPostData} from '../../REDUX/List_Reducer';\r\nimport TodoTask from './todoTask.js';\r\nclass   TodoList  extends React.Component  {\r\nconstructor(props) {\r\n   super(props);\r\n}\r\n    hideBlock = (index, name, decription, id) =>  {\r\n      let arr = this.props.myPostData;\r\n      arr.splice(index, 1);\r\n      this.setState({myPostData:arr});\r\n    }\r\n   getDataList = (values) => {\r\n   this.props.addpost(values.name, values.description);\r\n  }\r\n  myPostElement =(el, index) =>{\r\n     return <TodoTask id={index}   myPostData ={this.props.myPostData} index={index} hideBlock={this.hideBlock} name={el.name} done={el.done} description = {el.description} />\r\n   }\r\n\r\nrender () {\r\n  return (\r\n    <div>\r\n     <TodoListFormRedux  onLangChange={this.props.onLangChange} onSubmit={this.getDataList} />\r\n     {this.props.myPostData.map(this.myPostElement)}\r\n     {this.myPostElement}\r\n    </div>\r\n  )\r\n\r\n}\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {connect} from   'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TodoList from './content.js';\r\nimport listReducer from '../../REDUX/List_Reducer';\r\nimport {setPostData} from '../../REDUX/List_Reducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n  myPostData: state.post.myPostData\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addpost:(name, description) => {\r\n      dispatch(setPostData(name, description))\r\n    }\r\n  }\r\n}\r\nconst TodoListContainer = connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\nexport default TodoListContainer;\r\n","import React, {Component} from 'react';\r\nimport h from './header.module.css/header.module.css';\r\nimport {connect} from 'react-redux';\r\nimport {logOutUser} from '../../REDUX/Auth_Reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport listReducer from '../../REDUX/List_Reducer';\r\nimport {deleteTask} from '../../REDUX/List_Reducer';\r\nimport Translate  from 'react-translate-component';\r\n\r\n    class Header extends React.Component {\r\n      constructor(props) {\r\n         super(props);\r\n      }\r\n\r\n      getOutUser = () => {\r\n         let login = null;\r\n       let password = null;\r\n       let myPostData = [];\r\n      this.props.OutUserData(login, password);\r\n      this.props.deleteTask(myPostData);\r\n    }\r\n    state = {\r\n      redirect: false\r\n    }\r\n    setRedirect =() => {\r\n      this.setState({\r\n        redirect:true\r\n      })\r\n    }\r\n    renderRedirect = () => {\r\n      if (this.props.login === null) {\r\n        return <Redirect to='./authorize' />\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return (\r\n    <div className={h.header} >\r\n    {this.renderRedirect()}\r\n     <div className={h.header_logo}>\r\n    </div>\r\n    <div className={h.header_authorize}>\r\n    <Translate content='task.hello' component='p' /> <span> {this.props.login} </span>\r\n    <div className={h.header_authorize_button}>\r\n   <button onClick={this.getOutUser}></button>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {connect} from   'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {logOutUser} from '../../REDUX/Auth_Reducer';\r\nimport authReducer from '../../REDUX/Auth_Reducer';\r\nimport {deleteTask} from '../../REDUX/List_Reducer';\r\nimport listReducer from '../../REDUX/List_Reducer';\r\n\r\nimport Header from './header.js';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    login: state.auth.login,\r\n    password:state.auth.password,\r\n    myPostData:state.post.myPostData\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    OutUserData:(login, password) => {\r\n        dispatch(logOutUser(login, password))\r\n  },\r\n  deleteTask: (newTasks) => {\r\n    dispatch(deleteTask(newTasks))\r\n  }\r\n}\r\n}\r\n\r\nconst HeaderContainer = connect(mapStateToProps, mapDispatchToProps)(Header);\r\n  export default  HeaderContainer;\r\n","import React, {Component} from 'react';\r\nimport Authorize from '../authorize/authorize.js';\r\nimport Sidebar from '../sidebar/sidebar.js';\r\nimport { Redirect } from 'react-router-dom';\r\nimport store from '../../REDUX/Redux_store.js';\r\nimport Header from '../header/header.js';\r\nimport Footer from '../footer/footer.js';\r\nimport main from './main/main.module.css';\r\nimport {BrowserRouter, Route, withRouter} from  'react-router-dom';\r\n\r\n class Button extends React.Component  {\r\n\r\n  state = {\r\n    redirect:false\r\n  }\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true\r\n    })\r\n  }\r\n\r\n  renderRedirect = () => {\r\n    if(this.state.redirect == true) {\r\n      console.log(this.props);\r\n      return <Redirect to='/authorize' />\r\n    }\r\n  }\r\n  render () {\r\n  return (\r\n    <div>\r\n    {this.renderRedirect()}\r\n     <button className={main.button} onClick={this.setRedirect} >+</button>\r\n  </div>\r\n  )\r\n }\r\n}\r\n\r\n\r\n\r\nexport default Button;\r\n","import React, {Component} from 'react';\nimport {HashRouter } from  'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Provider} from  'react-redux';\nimport store from './REDUX/Redux_store.js';\nimport { Route, withRouter} from  'react-router-dom';\nimport Authorize from './components/authorize/authorize.js';\nimport Sidebar from './components/sidebar/sidebar.js';\nimport TodoListContainer from './components/content/content_container.js';\nimport HeaderContainer from './components/header/header_container.js';\nimport { Redirect } from 'react-router-dom';\nimport Footer from './components/footer/footer.js';\nimport main from './components/main/main/main.module.css';\nimport Button from './components/main/main.js';\nimport counterpart from 'counterpart';\nimport Translate  from 'react-translate-component';\nimport en from './lang/en';\nimport uk from './lang/uk';\nimport ru from './lang/ru';\ncounterpart.registerTranslations('en', en);\ncounterpart.registerTranslations('ru', ru);\ncounterpart.registerTranslations('uk', uk);\ncounterpart.setLocale('en');\nclass  App  extends Component{\n  state = {\n    lang: 'en'\n  }\n  onLangChange =(e) => {\n    this.setState({lang: e.target.value});\n    counterpart.setLocale(e.target.value);\n  }\n  render(){\n    return (\n      <div className='app-wrapper'>\n        <div className='app-wrapper-change-lang'>\n          <select value={this.state.lang} onChange={this.onLangChange}>\n            <option value='en'>EN</option>\n            <option value='ru'>RU</option>\n            <option value='uk'>UK</option>\n         </select>\n        </div>\n       <HashRouter basename={process.env.PUBLIC_URL}>\n         <Provider store = {store}>\n            <div className='wrapper__description'>\n                <Redirect from=\"/\" to=\"/start\" />\n                <Route path='/start'  render = { () => {\n                  return    <React.Suspense>\n                    <div className='wrapper__button'>\n                    <Translate content='title' component='span' className='wrapper__button_content' />\n                    <Button />\n                   </div>\n                   </React.Suspense>\n               }} />\n               <Route path='/authorize'   render = { () => { return    <React.Suspense>\n                   <Authorize onLangChange={this.onLangChange} /> </React.Suspense>   }} />\n               <Route path='/content'  render = { () => {  return    <React.Suspense>\n                   <HeaderContainer  onLangChange={this.onLangChange}/>\n                   <div className=\"content__wrapper\">\n                   <TodoListContainer onLangChange={this.onLangChange} />\n                   <div className='sidebar__wrapper'>\n                   <Sidebar onLangChange={this.onLangChange}  />\n                   </div>\n                   </div>\n              {/*  <Footer />*/}\n                    </React.Suspense>\n                    }} />\n            </div>\n        </Provider>\n      </HashRouter>\n    </div>\n    );\n }\n}\n\nexport default App;\n","export default {\r\n  title:'Todolist is a simple to-do list or task list. Write in it all your important affairs, so as not to forget. Click on the plus button to start keeping a to-do list.',\r\n  authorize: {\r\n    name: 'Registration'\r\n  },\r\n  placeholder: {\r\n    login: 'Enter your name',\r\n    password: 'Enter your password'\r\n  },\r\n  task: {\r\n    name:'Name',\r\n    description: 'Description',\r\n    count:'Number of open tasks: ',\r\n    hello:'Hello'\r\n  }\r\n  }\r\n","export default {\r\n  title: 'Todolist — это простой список дел или список задач. Запиши в него все свои важные дела, чтобы не забыть. Нажми на плюс, что бы начать вести список дел.',\r\n  authorize: {\r\n    name: 'Регистрация'\r\n  },\r\n  placeholder: {\r\n    login: 'Введите ваше имя',\r\n    password: 'Введите ваш пароль'\r\n  },\r\n  task: {\r\n    name:'Название',\r\n    description: 'Описание',\r\n    count:'Количество открытых задач: ',\r\n    hello:'Привет'\r\n  }\r\n}\r\n","export default {\r\n  title:'Todolist - це простий список справ або список завдань. Запиши в нього всі свої важливі справи, щоб не забути. Натисни на плюс, що б почати вести список справ.',\r\n  authorize: {\r\n    name: 'Реєстрація'\r\n  },\r\n  placeholder: {\r\n    login: 'Введіть ваше імя',\r\n    password: 'Введіть Ваш пароль'\r\n  },\r\n  task: {\r\n    name:'Назва',\r\n    description: 'Опис',\r\n    count:'Кількість відкритих задач: ',\r\n    hello:'Привіт'\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration__container\":\"authorize_registration__container__3ZzVA\",\"registration__container__input\":\"authorize_registration__container__input__mTAKr\",\"registration__button\":\"authorize_registration__button__2VXF_\",\"registration__button__wrapper\":\"authorize_registration__button__wrapper__3xzUA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__uyLiU\",\"header_authorize\":\"header_header_authorize__1LBjb\",\"header_authorize_button\":\"header_header_authorize_button__26QEk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"formControl_form_control__2Yj4l\",\"error\":\"formControl_error__oXgYQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"main_body__RXaJy\",\"header\":\"main_header__D-50v\",\"wrapper\":\"main_wrapper__9aEX6\",\"wrapper__content\":\"main_wrapper__content__17miv\",\"wrapper__sidebar\":\"main_wrapper__sidebar__2xjRg\",\"button\":\"main_button__37Ytw\"};"],"sourceRoot":""}